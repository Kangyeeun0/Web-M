{"version":3,"sources":["Button.module.css","logo.svg","App.module.css","components/Movie.module.css","routes/Home.module.css","button.js","components/Movie.js","routes/Home.js","routes/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","title","__webpack_require__","p","movie","movie__img","movie__title","movie__year","movie__genres","container","loader","movies","Button","Movie","_ref","id","coverImg","summary","genres","year","rating","runtime","React","createElement","src","alt","Link","to","concat","map","g","key","Home","loading","setLoading","useState","setMovies","useEffect","async","json","fetch","data","getMovies","medium_cover_image","Detail","useParams","getMovie","App","Router","Switch","Route","path","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41300e1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Button_title__1fglW\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__229Nb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__3ILqG\",\"movie__img\":\"Movie_movie__img__2w9zN\",\"movie__title\":\"Movie_movie__title__q6TgL\",\"movie__year\":\"Movie_movie__year__2oVqx\",\"movie__genres\":\"Movie_movie__genres__2eQRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2Lv0k\",\"loader\":\"Home_loader__3lSu2\",\"movies\":\"Home_movies__1BdI0\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nfunction Button({ text }) {\r\n    return <button className={styles.title}>{text}</button>;\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Movie.module.css';\r\n\r\nfunction Movie({ id, coverImg, title, summary, genres, year, rating, runtime }) {\r\n    return (\r\n        <div>\r\n            <img src={coverImg} alt={title} />\r\n            <h2>\r\n                <Link to={`/movie/${id}`}>{title}</Link>\r\n            </h2>\r\n            <p>{summary}</p>\r\n            <ul>\r\n                {genres.map((g) => (\r\n                    <li key={g}>{g}</li>\r\n                ))}\r\n            </ul>\r\n            <ul>\r\n                <p>year : </p>\r\n                {year}\r\n            </ul>\r\n            <ul>\r\n                <p>rating : </p>\r\n                {rating}\r\n            </ul>\r\n            <ul>\r\n                <p>runtime : </p>\r\n                {runtime}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    coverImg: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    rating: PropTypes.number.isRequired,\r\n    runtime: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Movie from '../components/Movie';\r\nimport styles from './Home.module.css';\r\n\r\nfunction Home() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [movies, setMovies] = useState([]);\r\n    const getMovies = async () => {\r\n        const json = await (\r\n            await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\r\n        ).json();\r\n        setMovies(json.data.movies);\r\n        setLoading(false);\r\n    };\r\n    useEffect(() => {\r\n        getMovies();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <h1>Loading...</h1>\r\n            ) : (\r\n                <div>\r\n                    {movies.map((movie) => (\r\n                        <Movie\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            coverImg={movie.medium_cover_image}\r\n                            title={movie.title}\r\n                            summary={movie.summary}\r\n                            genres={movie.genres}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Movie from '../components/Movie';\r\n\r\nfunction Detail() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [movies, setMovies] = useState([]);\r\n    const { id } = useParams();\r\n    const getMovie = async () => {\r\n        const json = await (await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)).json();\r\n        setMovies(json.data.movie);\r\n        setLoading(false);\r\n    };\r\n    useEffect(() => {\r\n        getMovie();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <h1>loading...</h1>\r\n            ) : (\r\n                <div>\r\n                    {movies && (\r\n                        <Movie\r\n                            coverImg={movies.medium_cover_image}\r\n                            title={movies.title}\r\n                            summary={movies.summary}\r\n                            genres={movies.genres}\r\n                            year={movies.year}\r\n                            rating={movies.rating}\r\n                            runtime={movies.runtime}\r\n                        />\r\n                    )}\r\n                </div>\r\n            )}\r\n            ;\r\n        </div>\r\n    );\r\n}\r\nexport default Detail;\r\n\r\n//await는 async 함수 내부에 있지 않으면 사용할 수 없음\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from './button';\nimport styles from './App.module.css';\nimport { useEffect, useState } from 'react';\nimport { func } from 'prop-types';\nimport Movie from './components/Movie';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/abot-us\">\n                    <h1>Hello!</h1>\n                </Route>\n                <Route path=\"/movie/:id\">\n                    <Detail />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport index from './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}